<% provide(:title, 'Camera Roll') %>
<div class="container-fluid center " >
      <div class="row">
  <div class="span16" >
    <div class="row" style="margin-left:10px;">
      <div class="span4">
        <div  style = "border:2px solid #ddd; width:150px; height:50px; padding:10px;  left:20px; text-align:right; z-index: 1;  background: url(/assets/cam_roll.png) no-repeat 10%; 
          "> 
        <h4 ><%= link_to "Camera Roll", albums_path, remote: true, id:"roll" %></h4></div>
      </div>
      <div class="span4">
        <div style = "border:2px solid #ddd; width:150px; height:50px; padding:10px;  left:20px; text-align:right; z-index: 1;  background: url(/assets/album_icon.png) no-repeat 10%; 
          " > 
        <h4 ><%= link_to " Albums", list_albums_path, remote: true %></h4></div>
      </div>
      <div class="span3">
        <div id="upload1" style = "border:2px dashed #ddd; width:170px; height:50px; padding:10px;  left:40px; text-align:right; z-index: 1;  background: url(/assets/upload-foto.png) no-repeat 10%; 
          ">   <h4>Upload photos</h4>
          </div>

      </div>
    </div>
  </div>
</div>
  <div class="row">

     <div  class="span16">
     <div id="floater-wrapper">
       <div id="image" style="display:none;">
          <!-- style="display:none"> -->
          <div id="floater" style="width:640px;">
           <h3><a href="#">Photos ready to be uploaded... </a>
            <%= form_for(@photo, :html => {:multipart => true}) do |f| %>
          <%= render 'shared/error_messages', object: f.object %>         
                  <%= f.fields_for :photos, Photo.new, :child_index => 'NEW_RECORD' do |photo_form| %>
                 
                   <%= photo_form.file_field :pic, id: "pic", :multiple => true,style: "width:1px; height:1px; padding:0px;  left:0px;" %>                <% end %>
          
          <%= hidden_field_tag :type, "user" %>  
          <%= f.submit "Post", class: "btn primary" %>
         <% end %></h3>
       </div>
          <canvas id="imageCanvas" style = "border: 1px solid #ddd; padding:10px; align:center" ></canvas>
       </div>
          
        
        <br>
       <div id="gallery" >
        <%= render 'albums/camera_roll' %>
        
      </div>
    </div>
  </div>
  </div>  
 </div> 
<script type="text/javascript">
$("#image_upload").click(function(){
      
   $("#image_upload").after($("div#image").html().replace('NEW_RECORD', new Date().getTime()) ); 
   
  });

$("#remove_image").click(function(){
  $("#pic").val("");
  $("#image").hide();
  $("#image_upload").show();

});

/*
$('img.image_al_c').load(function() {
    $(this).data('height', this.height);
}).bind('mouseenter mouseleave', function(e) {
    $(this).stop().animate({
        height: $(this).data('height') * (e.type === 'mouseenter' ? 1.5 : 1)
    });
});*/

$("#upload1").click(function(){
      $("#pic").click();
    });

$("#roll").click(function(){
  $("#image").hide();
  $("#gallery").show();
  $("#newAlbum").hide();
});

$(".albumLink").click(function(){
  $("#image").hide();
  $("#gallery").show();
  $("#newAlbum").hide();
});



 

$(document).ready(function() {
    var imageLoader = document.getElementById('pic');
    imageLoader.addEventListener('change', handleImage, false);

  function handleImage(e){
    var canvas = document.getElementById('imageCanvas');
    var ctx = canvas.getContext('2d');
    var iCnt=0;
    var files = e.target.files;
    if(files.length==0){
      $("#image").hide();
      $("#gallery").show();
      $("#newAlbum").hide();
    }else{
      $("#image").show();
      $("#gallery").hide();
      $("#newAlbum").hide();
    }
    canvas.width = 600;
    canvas.height = 155*(Math.ceil(files.length/4));
    for( var i = 0, len = files.length; i < len; i++) 
          {
          if(files[i])
            {
              var reader = new FileReader();
              reader.onload = function(event){
                var img = new Image();

                img.onload = function(){
                  var ratioPx = 150;
                  var sWidth =ratioPx;
                  var ratio = img.width/sWidth;
                  var sHeight = img.height/ratio;   
                    if(sHeight>ratioPx){
                       sHeight =ratioPx;
                       ratio = img.height/sHeight;
                       sWidth = img.width/ratio;  
                    }
                  ctx.drawImage(img, 155*(iCnt%4),155*(Math.floor(iCnt/4)),sWidth,sHeight);
                  //ctx.drawImage(img,0,0,sWidth,sHeight);
                  iCnt++;
                }
                img.src = event.target.result;
              }
              reader.readAsDataURL(e.target.files[i]);     
            }
          }
  }

   $(window).scroll( function() {
        if ($(window).scrollTop() > ($('#floater-wrapper').offset().top)-40)
            $('#floater').addClass('floating');
         // console.log("addClass");
        else
            $('#floater').removeClass('floating');
         // console.log("removeClass");
    } );
});






</script>
